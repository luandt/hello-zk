// SPDX-License-Identifier: UNLICENSED
pragma solidity >=0.8.25 <0.9.0;

import {Groth16Verifier} from "../src/verifier.sol";
import { Script } from "forge-std/src/Script.sol";
import "forge-std/src/console.sol";

/// @dev See the Solidity Scripting tutorial: https://book.getfoundry.sh/tutorials/solidity-scripting
contract Deploy is Script{
    function run() public returns (Groth16Verifier verifier) {
        uint256 deployerPrivateKey = vm.envUint("PRIVATE_KEY");

        vm.startBroadcast(deployerPrivateKey);
        verifier = new Groth16Verifier();

        // bool r = verifier.verifyProof(
        //     [21344529039867642738510397377876146259038501554931325406214543597454379755439,8976648817476389217708538658785254934268439161015719064362999030809393764999],
        //     [[17403079811870541704844424248523753069906068604490748359863959777843324819475,9692872315583656082798304049253911348579573220592590130503699873713971147478],[21805756855415707546531957795313603862597671569597417504655696766330683494810,21197175524545537519555648600584355203435948667399476861668394613100750130601]],
        //     [3849134695378743302609165268144292894969238300245668850466502672023257017945,8376787217373855464599860663895279030958888153224591414693039755943740304369],
        //     [uint(55)]);
        
        // console.log("verification is ", r);
        vm.stopBroadcast();

    }
}

contract verifyProofOC is Script{
    function run() public returns (Groth16Verifier verifier) {
        Groth16Verifier verifier = Groth16Verifier(0x87035f7005350500e0282B55F8a430e8286F7936);

        bool r = verifier.verifyProof(
            [21344529039867642738510397377876146259038501554931325406214543597454379755439,8976648817476389217708538658785254934268439161015719064362999030809393764999],
            [[17403079811870541704844424248523753069906068604490748359863959777843324819475,9692872315583656082798304049253911348579573220592590130503699873713971147478],[21805756855415707546531957795313603862597671569597417504655696766330683494810,21197175524545537519555648600584355203435948667399476861668394613100750130601]],
            [3849134695378743302609165268144292894969238300245668850466502672023257017945,8376787217373855464599860663895279030958888153224591414693039755943740304369],
            [uint(55)]);
        console.log("verification is ", r);

    }
}
